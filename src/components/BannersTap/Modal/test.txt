import React, { useCallback, useState } from "react";
import { DragDropContext, Draggable, Droppable } from "react-beautiful-dnd";

function Banners() {
  const temp = Array(10)
    .fill(0)
    .map((_, index) => ({
      id: `item-${index}`,
      content: `List item ${index + 1}`,
    }));

  const [items, setItems] = useState(temp);
  // [
  //   {id:0,content:"List item 1"},
  //   {id:1,content:"List item 2"}
  // ]

  const onDragEnd = (result) => {
    console.log("dragging over", result);
    if (!result.destination) {
      return;
    }
    const updatedList = reorder(
      items,
      result.source.index,
      result.destination.index
    );
    setItems(updatedList);
  };

  const reorder = (list, startIndex, endIndex) => {
    const result = [...list];
    const [removed] = result.splice(startIndex, 1);
    result.splice(endIndex, 0, removed);
    return result;
  };

  return (
    <DragDropContext onDragEnd={onDragEnd}>
      <Droppable droppableId="draggable">
        {(provided, snapshot) => (
          <div
            ref={provided.innerRef}
            {...provided.droppableProps}
            className={`list ${snapshot.isDraggingOver ? "draggingOver" : ""}`}
          >
            {items.map((item, index) => (
              <Draggable key={item.id} draggableId={item.id} index={index}>
                {(provided, snapshot) => (
                  <div
                    className={`item ${snapshot.isDragging ? "dragging" : ""}`}
                    style={provided.draggableProps.style}
                    ref={provided.innerRef}
                    {...provided.draggableProps}
                    {...provided.dragHandleProps}
                  >
                    {item.content}
                  </div>
                )}
              </Draggable>
            ))}
            {provided.placeholder}
          </div>
        )}
      </Droppable>
    </DragDropContext>
  );
}

export default Banners;
